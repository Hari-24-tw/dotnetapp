name: Dotnet-pipeline

on:
  push:
    branches: [ "master", "main" ]
      
  workflow_dispatch:

env:
  SONARQUBE_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Copy build files
        run: |
          echo "Starting build..."
          cd dotnetapp 
    
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore dotnetapp/dotnet_sample.csproj
      
      - name: Sonarqube Scanner
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin \
            /o:"hari-24-tw" \
            /k:"Hari-24-tw_dotnetapp" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.token="${{ env.SONARQUBE_TOKEN }}"
    
      - name: Build
        run: |
          dotnet build --configuration Release dotnetapp/dotnet_sample.csproj
          zip -r dotnetapp/build.zip dotnetapp/bin/Release/*
      
      - run: dotnet sonarscanner end /d:sonar.token="${{ env.SONARQUBE_TOKEN }}"

      - name: Test
        run: dotnet test --no-build --verbosity normal dotnetapp/dotnet_sample.csproj

      - name: Upload dotnet Artifact
        uses: actions/upload-artifact@v4.5.0
        with: 
          name: dotnet-zip-artifact
          path: dotnetapp/build.zip 
    
  deploy:
    name: Deploy
    runs-on: ubuntu-22.04
    environment: Dev
    needs: build

    steps:
      # - uses: actions/checkout@v4
      - name: Deployment-Dev
        run: |
          echo "Deployment to Dev Environment"